
MSK-FlightController.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800100  00000de8  00000e7c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000de8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000059  00800104  00800104  00000e80  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000e80  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000eb0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000e0  00000000  00000000  00000ef0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000174a  00000000  00000000  00000fd0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000995  00000000  00000000  0000271a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000097b  00000000  00000000  000030af  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000328  00000000  00000000  00003a2c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000087a  00000000  00000000  00003d54  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000856  00000000  00000000  000045ce  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000d0  00000000  00000000  00004e24  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 b1 00 	jmp	0x162	; 0x162 <__ctors_end>
   4:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
   8:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
   c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  10:	0c 94 f1 02 	jmp	0x5e2	; 0x5e2 <__vector_4>
  14:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  18:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  1c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  20:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  24:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  28:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  2c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  30:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  34:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  38:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  3c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  40:	0c 94 29 01 	jmp	0x252	; 0x252 <__vector_16>
  44:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  48:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  4c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  50:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  54:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  58:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  5c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  60:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  64:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>

00000068 <__trampolines_end>:
  68:	00 40       	sbci	r16, 0x00	; 0
  6a:	7a 10       	cpse	r7, r10
  6c:	f3 5a       	subi	r31, 0xA3	; 163
  6e:	00 a0       	ldd	r0, Z+32	; 0x20
  70:	72 4e       	sbci	r23, 0xE2	; 226
  72:	18 09       	sbc	r17, r8
  74:	00 10       	cpse	r0, r0
  76:	a5 d4       	rcall	.+2378   	; 0x9c2 <dtoa_prf+0xb0>
  78:	e8 00       	.word	0x00e8	; ????
  7a:	00 e8       	ldi	r16, 0x80	; 128
  7c:	76 48       	sbci	r23, 0x86	; 134
  7e:	17 00       	.word	0x0017	; ????
  80:	00 e4       	ldi	r16, 0x40	; 64
  82:	0b 54       	subi	r16, 0x4B	; 75
  84:	02 00       	.word	0x0002	; ????
  86:	00 ca       	rjmp	.-3072   	; 0xfffff488 <__eeprom_end+0xff7ef488>
  88:	9a 3b       	cpi	r25, 0xBA	; 186
  8a:	00 00       	nop
  8c:	00 e1       	ldi	r16, 0x10	; 16
  8e:	f5 05       	cpc	r31, r5
  90:	00 00       	nop
  92:	80 96       	adiw	r24, 0x20	; 32
  94:	98 00       	.word	0x0098	; ????
  96:	00 00       	nop
  98:	40 42       	sbci	r20, 0x20	; 32
  9a:	0f 00       	.word	0x000f	; ????
  9c:	00 00       	nop
  9e:	a0 86       	std	Z+8, r10	; 0x08
  a0:	01 00       	.word	0x0001	; ????
  a2:	00 00       	nop
  a4:	10 27       	eor	r17, r16
  a6:	00 00       	nop
  a8:	00 00       	nop
  aa:	e8 03       	fmulsu	r22, r16
  ac:	00 00       	nop
  ae:	00 00       	nop
  b0:	64 00       	.word	0x0064	; ????
  b2:	00 00       	nop
  b4:	00 00       	nop
  b6:	0a 00       	.word	0x000a	; ????
  b8:	00 00       	nop
  ba:	00 00       	nop
  bc:	01 00       	.word	0x0001	; ????
  be:	00 00       	nop
  c0:	00 00       	nop
  c2:	2c 76       	andi	r18, 0x6C	; 108
  c4:	d8 88       	ldd	r13, Y+16	; 0x10
  c6:	dc 67       	ori	r29, 0x7C	; 124
  c8:	4f 08       	sbc	r4, r15
  ca:	23 df       	rcall	.-442    	; 0xffffff12 <__eeprom_end+0xff7eff12>
  cc:	c1 df       	rcall	.-126    	; 0x50 <__SREG__+0x11>
  ce:	ae 59       	subi	r26, 0x9E	; 158
  d0:	e1 b1       	in	r30, 0x01	; 1
  d2:	b7 96       	adiw	r30, 0x27	; 39
  d4:	e5 e3       	ldi	r30, 0x35	; 53
  d6:	e4 53       	subi	r30, 0x34	; 52
  d8:	c6 3a       	cpi	r28, 0xA6	; 166
  da:	e6 51       	subi	r30, 0x16	; 22
  dc:	99 76       	andi	r25, 0x69	; 105
  de:	96 e8       	ldi	r25, 0x86	; 134
  e0:	e6 c2       	rjmp	.+1484   	; 0x6ae <__vector_4+0xcc>
  e2:	84 26       	eor	r8, r20
  e4:	eb 89       	ldd	r30, Y+19	; 0x13
  e6:	8c 9b       	sbis	0x11, 4	; 17
  e8:	62 ed       	ldi	r22, 0xD2	; 210
  ea:	40 7c       	andi	r20, 0xC0	; 192
  ec:	6f fc       	.word	0xfc6f	; ????
  ee:	ef bc       	out	0x2f, r14	; 47
  f0:	9c 9f       	mul	r25, r28
  f2:	40 f2       	brcs	.-112    	; 0x84 <__trampolines_end+0x1c>
  f4:	ba a5       	ldd	r27, Y+42	; 0x2a
  f6:	6f a5       	ldd	r22, Y+47	; 0x2f
  f8:	f4 90       	lpm	r15, Z
  fa:	05 5a       	subi	r16, 0xA5	; 165
  fc:	2a f7       	brpl	.-54     	; 0xc8 <__trampolines_end+0x60>
  fe:	5c 93       	st	X, r21
 100:	6b 6c       	ori	r22, 0xCB	; 203
 102:	f9 67       	ori	r31, 0x79	; 121
 104:	6d c1       	rjmp	.+730    	; 0x3e0 <_Z7MPUInitv+0x42>
 106:	1b fc       	.word	0xfc1b	; ????
 108:	e0 e4       	ldi	r30, 0x40	; 64
 10a:	0d 47       	sbci	r16, 0x7D	; 125
 10c:	fe f5       	brtc	.+126    	; 0x18c <.do_clear_bss_loop>
 10e:	20 e6       	ldi	r18, 0x60	; 96
 110:	b5 00       	.word	0x00b5	; ????
 112:	d0 ed       	ldi	r29, 0xD0	; 208
 114:	90 2e       	mov	r9, r16
 116:	03 00       	.word	0x0003	; ????
 118:	94 35       	cpi	r25, 0x54	; 84
 11a:	77 05       	cpc	r23, r7
 11c:	00 80       	ld	r0, Z
 11e:	84 1e       	adc	r8, r20
 120:	08 00       	.word	0x0008	; ????
 122:	00 20       	and	r0, r0
 124:	4e 0a       	sbc	r4, r30
 126:	00 00       	nop
 128:	00 c8       	rjmp	.-4096   	; 0xfffff12a <__eeprom_end+0xff7ef12a>
 12a:	0c 33       	cpi	r16, 0x3C	; 60
 12c:	33 33       	cpi	r19, 0x33	; 51
 12e:	33 0f       	add	r19, r19
 130:	98 6e       	ori	r25, 0xE8	; 232
 132:	12 83       	std	Z+2, r17	; 0x02
 134:	11 41       	sbci	r17, 0x11	; 17
 136:	ef 8d       	ldd	r30, Y+31	; 0x1f
 138:	21 14       	cp	r2, r1
 13a:	89 3b       	cpi	r24, 0xB9	; 185
 13c:	e6 55       	subi	r30, 0x56	; 86
 13e:	16 cf       	rjmp	.-468    	; 0xffffff6c <__eeprom_end+0xff7eff6c>
 140:	fe e6       	ldi	r31, 0x6E	; 110
 142:	db 18       	sub	r13, r11
 144:	d1 84       	ldd	r13, Z+9	; 0x09
 146:	4b 38       	cpi	r20, 0x8B	; 139
 148:	1b f7       	brvc	.-58     	; 0x110 <__trampolines_end+0xa8>
 14a:	7c 1d       	adc	r23, r12
 14c:	90 1d       	adc	r25, r0
 14e:	a4 bb       	out	0x14, r26	; 20
 150:	e4 24       	eor	r14, r4
 152:	20 32       	cpi	r18, 0x20	; 32
 154:	84 72       	andi	r24, 0x24	; 36
 156:	5e 22       	and	r5, r30
 158:	81 00       	.word	0x0081	; ????
 15a:	c9 f1       	breq	.+114    	; 0x1ce <_Z10i2cReadAckv+0x4>
 15c:	24 ec       	ldi	r18, 0xC4	; 196
 15e:	a1 e5       	ldi	r26, 0x51	; 81
 160:	3d 27       	eor	r19, r29

00000162 <__ctors_end>:
 162:	11 24       	eor	r1, r1
 164:	1f be       	out	0x3f, r1	; 63
 166:	cf ef       	ldi	r28, 0xFF	; 255
 168:	d8 e0       	ldi	r29, 0x08	; 8
 16a:	de bf       	out	0x3e, r29	; 62
 16c:	cd bf       	out	0x3d, r28	; 61

0000016e <__do_copy_data>:
 16e:	11 e0       	ldi	r17, 0x01	; 1
 170:	a0 e0       	ldi	r26, 0x00	; 0
 172:	b1 e0       	ldi	r27, 0x01	; 1
 174:	e8 ee       	ldi	r30, 0xE8	; 232
 176:	fd e0       	ldi	r31, 0x0D	; 13
 178:	02 c0       	rjmp	.+4      	; 0x17e <__do_copy_data+0x10>
 17a:	05 90       	lpm	r0, Z+
 17c:	0d 92       	st	X+, r0
 17e:	a4 30       	cpi	r26, 0x04	; 4
 180:	b1 07       	cpc	r27, r17
 182:	d9 f7       	brne	.-10     	; 0x17a <__do_copy_data+0xc>

00000184 <__do_clear_bss>:
 184:	21 e0       	ldi	r18, 0x01	; 1
 186:	a4 e0       	ldi	r26, 0x04	; 4
 188:	b1 e0       	ldi	r27, 0x01	; 1
 18a:	01 c0       	rjmp	.+2      	; 0x18e <.do_clear_bss_start>

0000018c <.do_clear_bss_loop>:
 18c:	1d 92       	st	X+, r1

0000018e <.do_clear_bss_start>:
 18e:	ad 35       	cpi	r26, 0x5D	; 93
 190:	b2 07       	cpc	r27, r18
 192:	e1 f7       	brne	.-8      	; 0x18c <.do_clear_bss_loop>
 194:	0e 94 34 02 	call	0x468	; 0x468 <main>
 198:	0c 94 f2 06 	jmp	0xde4	; 0xde4 <_exit>

0000019c <__bad_interrupt>:
 19c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001a0 <_Z7initI2Cv>:
										}*/
{
	//Setup the timer
	TCCR1B |= 1<<CS10 | 1<<WGM12;
	TIMSK1 |= 1<<OCIE1A;
	OCR1A = 16000;
 1a0:	8c e0       	ldi	r24, 0x0C	; 12
 1a2:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7e00b8>
 1a6:	ec eb       	ldi	r30, 0xBC	; 188
 1a8:	f0 e0       	ldi	r31, 0x00	; 0
 1aa:	80 81       	ld	r24, Z
 1ac:	84 60       	ori	r24, 0x04	; 4
 1ae:	80 83       	st	Z, r24
 1b0:	08 95       	ret

000001b2 <_Z18i2cWaitForCompletev>:
 1b2:	ec eb       	ldi	r30, 0xBC	; 188
 1b4:	f0 e0       	ldi	r31, 0x00	; 0
 1b6:	80 81       	ld	r24, Z
 1b8:	88 23       	and	r24, r24
 1ba:	ec f7       	brge	.-6      	; 0x1b6 <_Z18i2cWaitForCompletev+0x4>
 1bc:	08 95       	ret

000001be <_Z8i2cStartv>:
 1be:	84 ea       	ldi	r24, 0xA4	; 164
 1c0:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 1c4:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <_Z18i2cWaitForCompletev>
 1c8:	08 95       	ret

000001ca <_Z10i2cReadAckv>:
 1ca:	84 ec       	ldi	r24, 0xC4	; 196
 1cc:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 1d0:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <_Z18i2cWaitForCompletev>
 1d4:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
 1d8:	08 95       	ret

000001da <_Z12i2cReadNoAckv>:
 1da:	84 e8       	ldi	r24, 0x84	; 132
 1dc:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 1e0:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <_Z18i2cWaitForCompletev>
 1e4:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
 1e8:	08 95       	ret

000001ea <_Z7i2cSendh>:
 1ea:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
 1ee:	84 e8       	ldi	r24, 0x84	; 132
 1f0:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 1f4:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <_Z18i2cWaitForCompletev>
 1f8:	08 95       	ret

000001fa <_Z10USART_initv>:
 1fa:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
 1fe:	81 e0       	ldi	r24, 0x01	; 1
 200:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
 204:	e1 ec       	ldi	r30, 0xC1	; 193
 206:	f0 e0       	ldi	r31, 0x00	; 0
 208:	88 e1       	ldi	r24, 0x18	; 24
 20a:	80 83       	st	Z, r24
 20c:	80 81       	ld	r24, Z
 20e:	86 e0       	ldi	r24, 0x06	; 6
 210:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
 214:	08 95       	ret

00000216 <_Z18USART_transmitByteh>:
 216:	e0 ec       	ldi	r30, 0xC0	; 192
 218:	f0 e0       	ldi	r31, 0x00	; 0
 21a:	90 81       	ld	r25, Z
 21c:	95 ff       	sbrs	r25, 5
 21e:	fd cf       	rjmp	.-6      	; 0x21a <_Z18USART_transmitByteh+0x4>
 220:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 224:	08 95       	ret

00000226 <_Z11printStringPKc>:
 226:	0f 93       	push	r16
 228:	1f 93       	push	r17
 22a:	cf 93       	push	r28
 22c:	fc 01       	movw	r30, r24
 22e:	80 81       	ld	r24, Z
 230:	88 23       	and	r24, r24
 232:	59 f0       	breq	.+22     	; 0x24a <_Z11printStringPKc+0x24>
 234:	8f 01       	movw	r16, r30
 236:	c0 e0       	ldi	r28, 0x00	; 0
 238:	0e 94 0b 01 	call	0x216	; 0x216 <_Z18USART_transmitByteh>
 23c:	cf 5f       	subi	r28, 0xFF	; 255
 23e:	f8 01       	movw	r30, r16
 240:	ec 0f       	add	r30, r28
 242:	f1 1d       	adc	r31, r1
 244:	80 81       	ld	r24, Z
 246:	81 11       	cpse	r24, r1
 248:	f7 cf       	rjmp	.-18     	; 0x238 <_Z11printStringPKc+0x12>
 24a:	cf 91       	pop	r28
 24c:	1f 91       	pop	r17
 24e:	0f 91       	pop	r16
 250:	08 95       	ret

00000252 <__vector_16>:
 252:	1f 92       	push	r1
 254:	0f 92       	push	r0
 256:	0f b6       	in	r0, 0x3f	; 63
 258:	0f 92       	push	r0
 25a:	11 24       	eor	r1, r1
 25c:	2f 93       	push	r18
 25e:	3f 93       	push	r19
 260:	8f 93       	push	r24
 262:	9f 93       	push	r25
 264:	af 93       	push	r26
 266:	bf 93       	push	r27
 268:	80 91 55 01 	lds	r24, 0x0155	; 0x800155 <timer0_millis>
 26c:	90 91 56 01 	lds	r25, 0x0156	; 0x800156 <timer0_millis+0x1>
 270:	a0 91 57 01 	lds	r26, 0x0157	; 0x800157 <timer0_millis+0x2>
 274:	b0 91 58 01 	lds	r27, 0x0158	; 0x800158 <timer0_millis+0x3>
 278:	30 91 54 01 	lds	r19, 0x0154	; 0x800154 <_ZL12timer0_fract>
 27c:	23 e0       	ldi	r18, 0x03	; 3
 27e:	23 0f       	add	r18, r19
 280:	2d 37       	cpi	r18, 0x7D	; 125
 282:	20 f4       	brcc	.+8      	; 0x28c <__vector_16+0x3a>
 284:	01 96       	adiw	r24, 0x01	; 1
 286:	a1 1d       	adc	r26, r1
 288:	b1 1d       	adc	r27, r1
 28a:	05 c0       	rjmp	.+10     	; 0x296 <__vector_16+0x44>
 28c:	26 e8       	ldi	r18, 0x86	; 134
 28e:	23 0f       	add	r18, r19
 290:	02 96       	adiw	r24, 0x02	; 2
 292:	a1 1d       	adc	r26, r1
 294:	b1 1d       	adc	r27, r1
 296:	20 93 54 01 	sts	0x0154, r18	; 0x800154 <_ZL12timer0_fract>
 29a:	80 93 55 01 	sts	0x0155, r24	; 0x800155 <timer0_millis>
 29e:	90 93 56 01 	sts	0x0156, r25	; 0x800156 <timer0_millis+0x1>
 2a2:	a0 93 57 01 	sts	0x0157, r26	; 0x800157 <timer0_millis+0x2>
 2a6:	b0 93 58 01 	sts	0x0158, r27	; 0x800158 <timer0_millis+0x3>
 2aa:	80 91 59 01 	lds	r24, 0x0159	; 0x800159 <timer0_overflow_count>
 2ae:	90 91 5a 01 	lds	r25, 0x015A	; 0x80015a <timer0_overflow_count+0x1>
 2b2:	a0 91 5b 01 	lds	r26, 0x015B	; 0x80015b <timer0_overflow_count+0x2>
 2b6:	b0 91 5c 01 	lds	r27, 0x015C	; 0x80015c <timer0_overflow_count+0x3>
 2ba:	01 96       	adiw	r24, 0x01	; 1
 2bc:	a1 1d       	adc	r26, r1
 2be:	b1 1d       	adc	r27, r1
 2c0:	80 93 59 01 	sts	0x0159, r24	; 0x800159 <timer0_overflow_count>
 2c4:	90 93 5a 01 	sts	0x015A, r25	; 0x80015a <timer0_overflow_count+0x1>
 2c8:	a0 93 5b 01 	sts	0x015B, r26	; 0x80015b <timer0_overflow_count+0x2>
 2cc:	b0 93 5c 01 	sts	0x015C, r27	; 0x80015c <timer0_overflow_count+0x3>
 2d0:	bf 91       	pop	r27
 2d2:	af 91       	pop	r26
 2d4:	9f 91       	pop	r25
 2d6:	8f 91       	pop	r24
 2d8:	3f 91       	pop	r19
 2da:	2f 91       	pop	r18
 2dc:	0f 90       	pop	r0
 2de:	0f be       	out	0x3f, r0	; 63
 2e0:	0f 90       	pop	r0
 2e2:	1f 90       	pop	r1
 2e4:	18 95       	reti

000002e6 <_Z6microsv>:
 2e6:	3f b7       	in	r19, 0x3f	; 63
 2e8:	f8 94       	cli
 2ea:	80 91 59 01 	lds	r24, 0x0159	; 0x800159 <timer0_overflow_count>
 2ee:	90 91 5a 01 	lds	r25, 0x015A	; 0x80015a <timer0_overflow_count+0x1>
 2f2:	a0 91 5b 01 	lds	r26, 0x015B	; 0x80015b <timer0_overflow_count+0x2>
 2f6:	b0 91 5c 01 	lds	r27, 0x015C	; 0x80015c <timer0_overflow_count+0x3>
 2fa:	26 b5       	in	r18, 0x26	; 38
 2fc:	a8 9b       	sbis	0x15, 0	; 21
 2fe:	02 c0       	rjmp	.+4      	; 0x304 <_Z6microsv+0x1e>
 300:	2f 3f       	cpi	r18, 0xFF	; 255
 302:	a1 f4       	brne	.+40     	; 0x32c <_Z6microsv+0x46>
 304:	3f bf       	out	0x3f, r19	; 63
 306:	ba 2f       	mov	r27, r26
 308:	a9 2f       	mov	r26, r25
 30a:	98 2f       	mov	r25, r24
 30c:	88 27       	eor	r24, r24
 30e:	82 0f       	add	r24, r18
 310:	91 1d       	adc	r25, r1
 312:	a1 1d       	adc	r26, r1
 314:	b1 1d       	adc	r27, r1
 316:	bc 01       	movw	r22, r24
 318:	cd 01       	movw	r24, r26
 31a:	66 0f       	add	r22, r22
 31c:	77 1f       	adc	r23, r23
 31e:	88 1f       	adc	r24, r24
 320:	99 1f       	adc	r25, r25
 322:	66 0f       	add	r22, r22
 324:	77 1f       	adc	r23, r23
 326:	88 1f       	adc	r24, r24
 328:	99 1f       	adc	r25, r25
 32a:	08 95       	ret
 32c:	01 96       	adiw	r24, 0x01	; 1
 32e:	a1 1d       	adc	r26, r1
 330:	b1 1d       	adc	r27, r1
 332:	e8 cf       	rjmp	.-48     	; 0x304 <_Z6microsv+0x1e>

00000334 <_Z10microsinitv>:
 334:	78 94       	sei
 336:	84 b5       	in	r24, 0x24	; 36
 338:	83 60       	ori	r24, 0x03	; 3
 33a:	84 bd       	out	0x24, r24	; 36
 33c:	85 b5       	in	r24, 0x25	; 37
 33e:	83 60       	ori	r24, 0x03	; 3
 340:	85 bd       	out	0x25, r24	; 37
 342:	ee e6       	ldi	r30, 0x6E	; 110
 344:	f0 e0       	ldi	r31, 0x00	; 0
 346:	80 81       	ld	r24, Z
 348:	81 60       	ori	r24, 0x01	; 1
 34a:	80 83       	st	Z, r24
 34c:	08 95       	ret

0000034e <_Z12mpuRead16bith>:
 34e:	cf 93       	push	r28
 350:	c8 2f       	mov	r28, r24
 352:	0e 94 df 00 	call	0x1be	; 0x1be <_Z8i2cStartv>
 356:	80 ed       	ldi	r24, 0xD0	; 208
 358:	0e 94 f5 00 	call	0x1ea	; 0x1ea <_Z7i2cSendh>
 35c:	8c 2f       	mov	r24, r28
 35e:	0e 94 f5 00 	call	0x1ea	; 0x1ea <_Z7i2cSendh>
 362:	0e 94 df 00 	call	0x1be	; 0x1be <_Z8i2cStartv>
 366:	81 ed       	ldi	r24, 0xD1	; 209
 368:	0e 94 f5 00 	call	0x1ea	; 0x1ea <_Z7i2cSendh>
 36c:	0e 94 e5 00 	call	0x1ca	; 0x1ca <_Z10i2cReadAckv>
 370:	80 93 53 01 	sts	0x0153, r24	; 0x800153 <H>
 374:	0e 94 ed 00 	call	0x1da	; 0x1da <_Z12i2cReadNoAckv>
 378:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <L>
 37c:	84 e9       	ldi	r24, 0x94	; 148
 37e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 382:	60 91 53 01 	lds	r22, 0x0153	; 0x800153 <H>
 386:	70 e0       	ldi	r23, 0x00	; 0
 388:	76 2f       	mov	r23, r22
 38a:	66 27       	eor	r22, r22
 38c:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <L>
 390:	68 2b       	or	r22, r24
 392:	07 2e       	mov	r0, r23
 394:	00 0c       	add	r0, r0
 396:	88 0b       	sbc	r24, r24
 398:	99 0b       	sbc	r25, r25
 39a:	cf 91       	pop	r28
 39c:	08 95       	ret

0000039e <_Z7MPUInitv>:
}

void MPUInit()
{
	// Raw Readings
	AccX = mpuRead16bit(ACCEL_XOUT_H);
 39e:	8b e3       	ldi	r24, 0x3B	; 59
 3a0:	0e 94 a7 01 	call	0x34e	; 0x34e <_Z12mpuRead16bith>
 3a4:	60 93 4e 01 	sts	0x014E, r22	; 0x80014e <AccX>
 3a8:	70 93 4f 01 	sts	0x014F, r23	; 0x80014f <AccX+0x1>
 3ac:	80 93 50 01 	sts	0x0150, r24	; 0x800150 <AccX+0x2>
 3b0:	90 93 51 01 	sts	0x0151, r25	; 0x800151 <AccX+0x3>
	AccY = mpuRead16bit(ACCEL_YOUT_H);
 3b4:	8d e3       	ldi	r24, 0x3D	; 61
 3b6:	0e 94 a7 01 	call	0x34e	; 0x34e <_Z12mpuRead16bith>
 3ba:	60 93 4a 01 	sts	0x014A, r22	; 0x80014a <AccY>
 3be:	70 93 4b 01 	sts	0x014B, r23	; 0x80014b <AccY+0x1>
 3c2:	80 93 4c 01 	sts	0x014C, r24	; 0x80014c <AccY+0x2>
 3c6:	90 93 4d 01 	sts	0x014D, r25	; 0x80014d <AccY+0x3>
	AccZ = mpuRead16bit(ACCEL_ZOUT_H);
 3ca:	8f e3       	ldi	r24, 0x3F	; 63
 3cc:	0e 94 a7 01 	call	0x34e	; 0x34e <_Z12mpuRead16bith>
 3d0:	60 93 46 01 	sts	0x0146, r22	; 0x800146 <AccZ>
 3d4:	70 93 47 01 	sts	0x0147, r23	; 0x800147 <AccZ+0x1>
 3d8:	80 93 48 01 	sts	0x0148, r24	; 0x800148 <AccZ+0x2>
 3dc:	90 93 49 01 	sts	0x0149, r25	; 0x800149 <AccZ+0x3>
	
	GyroX = mpuRead16bit(GYRO_XOUT_H);
 3e0:	83 e4       	ldi	r24, 0x43	; 67
 3e2:	0e 94 a7 01 	call	0x34e	; 0x34e <_Z12mpuRead16bith>
 3e6:	60 93 42 01 	sts	0x0142, r22	; 0x800142 <GyroX>
 3ea:	70 93 43 01 	sts	0x0143, r23	; 0x800143 <GyroX+0x1>
 3ee:	80 93 44 01 	sts	0x0144, r24	; 0x800144 <GyroX+0x2>
 3f2:	90 93 45 01 	sts	0x0145, r25	; 0x800145 <GyroX+0x3>
	GyroY = mpuRead16bit(GYRO_YOUT_H);
 3f6:	85 e4       	ldi	r24, 0x45	; 69
 3f8:	0e 94 a7 01 	call	0x34e	; 0x34e <_Z12mpuRead16bith>
 3fc:	60 93 3e 01 	sts	0x013E, r22	; 0x80013e <GyroY>
 400:	70 93 3f 01 	sts	0x013F, r23	; 0x80013f <GyroY+0x1>
 404:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <GyroY+0x2>
 408:	90 93 41 01 	sts	0x0141, r25	; 0x800141 <GyroY+0x3>
	GyroZ = mpuRead16bit(GYRO_ZOUT_H);
 40c:	87 e4       	ldi	r24, 0x47	; 71
 40e:	0e 94 a7 01 	call	0x34e	; 0x34e <_Z12mpuRead16bith>
 412:	60 93 3a 01 	sts	0x013A, r22	; 0x80013a <GyroZ>
 416:	70 93 3b 01 	sts	0x013B, r23	; 0x80013b <GyroZ+0x1>
 41a:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <GyroZ+0x2>
 41e:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <GyroZ+0x3>
	//Trim
	
	aTrimX = -AccX;
 422:	80 91 4e 01 	lds	r24, 0x014E	; 0x80014e <AccX>
 426:	90 91 4f 01 	lds	r25, 0x014F	; 0x80014f <AccX+0x1>
 42a:	91 95       	neg	r25
 42c:	81 95       	neg	r24
 42e:	91 09       	sbc	r25, r1
 430:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <aTrimX+0x1>
 434:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <aTrimX>
	aTrimY = -AccY;
 438:	80 91 4a 01 	lds	r24, 0x014A	; 0x80014a <AccY>
 43c:	90 91 4b 01 	lds	r25, 0x014B	; 0x80014b <AccY+0x1>
 440:	91 95       	neg	r25
 442:	81 95       	neg	r24
 444:	91 09       	sbc	r25, r1
 446:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <aTrimY+0x1>
 44a:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <aTrimY>
	aTrimZ = -(AccZ-16384);
 44e:	20 91 46 01 	lds	r18, 0x0146	; 0x800146 <AccZ>
 452:	30 91 47 01 	lds	r19, 0x0147	; 0x800147 <AccZ+0x1>
 456:	80 e0       	ldi	r24, 0x00	; 0
 458:	90 e4       	ldi	r25, 0x40	; 64
 45a:	82 1b       	sub	r24, r18
 45c:	93 0b       	sbc	r25, r19
 45e:	90 93 35 01 	sts	0x0135, r25	; 0x800135 <aTrimZ+0x1>
 462:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <aTrimZ>
 466:	08 95       	ret

00000468 <main>:
double *Angle;
long timer_0, timer_1, timer_2, timer_3;
unsigned long esc_timer = 0;
unsigned long last_channel_0=0, last_channel_1=0, last_channel_2=0, last_channel_3=0;
int main(void)
{
 468:	cf 93       	push	r28
 46a:	df 93       	push	r29
 46c:	cd b7       	in	r28, 0x3d	; 61
 46e:	de b7       	in	r29, 0x3e	; 62
 470:	2c 97       	sbiw	r28, 0x0c	; 12
 472:	0f b6       	in	r0, 0x3f	; 63
 474:	f8 94       	cli
 476:	de bf       	out	0x3e, r29	; 62
 478:	0f be       	out	0x3f, r0	; 63
 47a:	cd bf       	out	0x3d, r28	; 61
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 47c:	2f ef       	ldi	r18, 0xFF	; 255
 47e:	8b e7       	ldi	r24, 0x7B	; 123
 480:	92 e9       	ldi	r25, 0x92	; 146
 482:	21 50       	subi	r18, 0x01	; 1
 484:	80 40       	sbci	r24, 0x00	; 0
 486:	90 40       	sbci	r25, 0x00	; 0
 488:	e1 f7       	brne	.-8      	; 0x482 <main+0x1a>
 48a:	00 c0       	rjmp	.+0      	; 0x48c <main+0x24>
 48c:	00 00       	nop
	_delay_ms(3000);
	PCICR |= 1<<PCIE1;
 48e:	e8 e6       	ldi	r30, 0x68	; 104
 490:	f0 e0       	ldi	r31, 0x00	; 0
 492:	80 81       	ld	r24, Z
 494:	82 60       	ori	r24, 0x02	; 2
 496:	80 83       	st	Z, r24
	PCMSK1 |= 1<<PCINT8 | 1<<PCINT9;
 498:	ec e6       	ldi	r30, 0x6C	; 108
 49a:	f0 e0       	ldi	r31, 0x00	; 0
 49c:	80 81       	ld	r24, Z
 49e:	83 60       	ori	r24, 0x03	; 3
 4a0:	80 83       	st	Z, r24
	microsinit();
 4a2:	0e 94 9a 01 	call	0x334	; 0x334 <_Z10microsinitv>
	initI2C();
 4a6:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <_Z7initI2Cv>
	USART_init();
 4aa:	0e 94 fd 00 	call	0x1fa	; 0x1fa <_Z10USART_initv>
	MPUInit();
 4ae:	0e 94 cf 01 	call	0x39e	; 0x39e <_Z7MPUInitv>
	
	DDRD |= 1<<7 | 1<<6 | 1<<5 | 1<<4;;
 4b2:	8a b1       	in	r24, 0x0a	; 10
 4b4:	80 6f       	ori	r24, 0xF0	; 240
 4b6:	8a b9       	out	0x0a, r24	; 10
		printString(cAngleY);
		printString("\n");
		PORTD &= ~(1<<7);*/
		
		char cAngleX[6];
		dtostrf(receiver_input[0]/1.0,5,0,cAngleX);
 4b8:	0f 2e       	mov	r0, r31
 4ba:	f8 e2       	ldi	r31, 0x28	; 40
 4bc:	ef 2e       	mov	r14, r31
 4be:	f1 e0       	ldi	r31, 0x01	; 1
 4c0:	ff 2e       	mov	r15, r31
 4c2:	f0 2d       	mov	r31, r0
 4c4:	f7 01       	movw	r30, r14
 4c6:	60 81       	ld	r22, Z
 4c8:	71 81       	ldd	r23, Z+1	; 0x01
 4ca:	07 2e       	mov	r0, r23
 4cc:	00 0c       	add	r0, r0
 4ce:	88 0b       	sbc	r24, r24
 4d0:	99 0b       	sbc	r25, r25
 4d2:	0e 94 2e 04 	call	0x85c	; 0x85c <__floatsisf>
 4d6:	8e 01       	movw	r16, r28
 4d8:	09 5f       	subi	r16, 0xF9	; 249
 4da:	1f 4f       	sbci	r17, 0xFF	; 255
 4dc:	20 e0       	ldi	r18, 0x00	; 0
 4de:	45 e0       	ldi	r20, 0x05	; 5
 4e0:	0e 94 69 04 	call	0x8d2	; 0x8d2 <dtostrf>
		
		char cAngleY[6];
		dtostrf(receiver_input[1]/1.0,5,0,cAngleY);
 4e4:	f7 01       	movw	r30, r14
 4e6:	62 81       	ldd	r22, Z+2	; 0x02
 4e8:	73 81       	ldd	r23, Z+3	; 0x03
 4ea:	07 2e       	mov	r0, r23
 4ec:	00 0c       	add	r0, r0
 4ee:	88 0b       	sbc	r24, r24
 4f0:	99 0b       	sbc	r25, r25
 4f2:	0e 94 2e 04 	call	0x85c	; 0x85c <__floatsisf>
 4f6:	06 50       	subi	r16, 0x06	; 6
 4f8:	11 09       	sbc	r17, r1
 4fa:	20 e0       	ldi	r18, 0x00	; 0
 4fc:	45 e0       	ldi	r20, 0x05	; 5
 4fe:	0e 94 69 04 	call	0x8d2	; 0x8d2 <dtostrf>
		
		printString(cAngleX);
 502:	ce 01       	movw	r24, r28
 504:	07 96       	adiw	r24, 0x07	; 7
 506:	0e 94 13 01 	call	0x226	; 0x226 <_Z11printStringPKc>
		printString("\t");
 50a:	80 e0       	ldi	r24, 0x00	; 0
 50c:	91 e0       	ldi	r25, 0x01	; 1
 50e:	0e 94 13 01 	call	0x226	; 0x226 <_Z11printStringPKc>
		printString(cAngleY);
 512:	c8 01       	movw	r24, r16
 514:	0e 94 13 01 	call	0x226	; 0x226 <_Z11printStringPKc>
		printString("\n");
 518:	82 e0       	ldi	r24, 0x02	; 2
 51a:	91 e0       	ldi	r25, 0x01	; 1
 51c:	0e 94 13 01 	call	0x226	; 0x226 <_Z11printStringPKc>
			while(micros()<esc_timer);
			PORTD &= ~(1<<5);
			PORTD &= ~(1<<6);
			PORTD &= ~(1<<7);
		}
		else if (receiver_input[0]>1504)
 520:	f7 01       	movw	r30, r14
 522:	80 81       	ld	r24, Z
 524:	91 81       	ldd	r25, Z+1	; 0x01
 526:	81 3e       	cpi	r24, 0xE1	; 225
 528:	f5 e0       	ldi	r31, 0x05	; 5
 52a:	9f 07       	cpc	r25, r31
 52c:	5c f1       	brlt	.+86     	; 0x584 <main+0x11c>
		{
			esc_timer = micros()-receiver_input[0];
 52e:	0e 94 73 01 	call	0x2e6	; 0x2e6 <_Z6microsv>
 532:	f7 01       	movw	r30, r14
 534:	00 81       	ld	r16, Z
 536:	11 81       	ldd	r17, Z+1	; 0x01
 538:	01 2e       	mov	r0, r17
 53a:	00 0c       	add	r0, r0
 53c:	22 0b       	sbc	r18, r18
 53e:	33 0b       	sbc	r19, r19
 540:	dc 01       	movw	r26, r24
 542:	cb 01       	movw	r24, r22
 544:	80 1b       	sub	r24, r16
 546:	91 0b       	sbc	r25, r17
 548:	a2 0b       	sbc	r26, r18
 54a:	b3 0b       	sbc	r27, r19
 54c:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <esc_timer>
 550:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <esc_timer+0x1>
 554:	a0 93 16 01 	sts	0x0116, r26	; 0x800116 <esc_timer+0x2>
 558:	b0 93 17 01 	sts	0x0117, r27	; 0x800117 <esc_timer+0x3>
			PORTD &= ~(1<<7);
 55c:	5f 98       	cbi	0x0b, 7	; 11
			while(micros()<esc_timer);
 55e:	0e 94 73 01 	call	0x2e6	; 0x2e6 <_Z6microsv>
 562:	00 91 14 01 	lds	r16, 0x0114	; 0x800114 <esc_timer>
 566:	10 91 15 01 	lds	r17, 0x0115	; 0x800115 <esc_timer+0x1>
 56a:	20 91 16 01 	lds	r18, 0x0116	; 0x800116 <esc_timer+0x2>
 56e:	30 91 17 01 	lds	r19, 0x0117	; 0x800117 <esc_timer+0x3>
 572:	60 17       	cp	r22, r16
 574:	71 07       	cpc	r23, r17
 576:	82 07       	cpc	r24, r18
 578:	93 07       	cpc	r25, r19
 57a:	88 f3       	brcs	.-30     	; 0x55e <main+0xf6>
			PORTD |= (1<<5);
 57c:	5d 9a       	sbi	0x0b, 5	; 11
			PORTD |= (1<<6);
 57e:	5e 9a       	sbi	0x0b, 6	; 11
			PORTD |= (1<<7);
 580:	5f 9a       	sbi	0x0b, 7	; 11
 582:	a0 cf       	rjmp	.-192    	; 0x4c4 <main+0x5c>
		}
		else if (receiver_input[0]<1496)
 584:	88 3d       	cpi	r24, 0xD8	; 216
 586:	95 40       	sbci	r25, 0x05	; 5
 588:	0c f0       	brlt	.+2      	; 0x58c <main+0x124>
 58a:	9c cf       	rjmp	.-200    	; 0x4c4 <main+0x5c>
		{
			esc_timer = micros()+receiver_input[0];
 58c:	0e 94 73 01 	call	0x2e6	; 0x2e6 <_Z6microsv>
 590:	f7 01       	movw	r30, r14
 592:	00 81       	ld	r16, Z
 594:	11 81       	ldd	r17, Z+1	; 0x01
 596:	01 2e       	mov	r0, r17
 598:	00 0c       	add	r0, r0
 59a:	22 0b       	sbc	r18, r18
 59c:	33 0b       	sbc	r19, r19
 59e:	dc 01       	movw	r26, r24
 5a0:	cb 01       	movw	r24, r22
 5a2:	80 0f       	add	r24, r16
 5a4:	91 1f       	adc	r25, r17
 5a6:	a2 1f       	adc	r26, r18
 5a8:	b3 1f       	adc	r27, r19
 5aa:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <esc_timer>
 5ae:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <esc_timer+0x1>
 5b2:	a0 93 16 01 	sts	0x0116, r26	; 0x800116 <esc_timer+0x2>
 5b6:	b0 93 17 01 	sts	0x0117, r27	; 0x800117 <esc_timer+0x3>
			PORTD &= ~(1<<6);
 5ba:	5e 98       	cbi	0x0b, 6	; 11
			while(micros()<esc_timer);
 5bc:	0e 94 73 01 	call	0x2e6	; 0x2e6 <_Z6microsv>
 5c0:	00 91 14 01 	lds	r16, 0x0114	; 0x800114 <esc_timer>
 5c4:	10 91 15 01 	lds	r17, 0x0115	; 0x800115 <esc_timer+0x1>
 5c8:	20 91 16 01 	lds	r18, 0x0116	; 0x800116 <esc_timer+0x2>
 5cc:	30 91 17 01 	lds	r19, 0x0117	; 0x800117 <esc_timer+0x3>
 5d0:	60 17       	cp	r22, r16
 5d2:	71 07       	cpc	r23, r17
 5d4:	82 07       	cpc	r24, r18
 5d6:	93 07       	cpc	r25, r19
 5d8:	88 f3       	brcs	.-30     	; 0x5bc <main+0x154>
			PORTD |= (1<<6);
 5da:	5e 9a       	sbi	0x0b, 6	; 11
			PORTD |= (1<<5);
 5dc:	5d 9a       	sbi	0x0b, 5	; 11
			PORTD |= (1<<7);
 5de:	5f 9a       	sbi	0x0b, 7	; 11
	USART_init();
	MPUInit();
	
	DDRD |= 1<<7 | 1<<6 | 1<<5 | 1<<4;;
    /* Replace with your application code */
    while (1) 
 5e0:	71 cf       	rjmp	.-286    	; 0x4c4 <main+0x5c>

000005e2 <__vector_4>:
	

}

ISR(PCINT1_vect)
{
 5e2:	1f 92       	push	r1
 5e4:	0f 92       	push	r0
 5e6:	0f b6       	in	r0, 0x3f	; 63
 5e8:	0f 92       	push	r0
 5ea:	11 24       	eor	r1, r1
 5ec:	0f 93       	push	r16
 5ee:	1f 93       	push	r17
 5f0:	2f 93       	push	r18
 5f2:	3f 93       	push	r19
 5f4:	4f 93       	push	r20
 5f6:	5f 93       	push	r21
 5f8:	6f 93       	push	r22
 5fa:	7f 93       	push	r23
 5fc:	8f 93       	push	r24
 5fe:	9f 93       	push	r25
 600:	af 93       	push	r26
 602:	bf 93       	push	r27
 604:	ef 93       	push	r30
 606:	ff 93       	push	r31
	Time = micros();
 608:	0e 94 73 01 	call	0x2e6	; 0x2e6 <_Z6microsv>
 60c:	60 93 30 01 	sts	0x0130, r22	; 0x800130 <Time>
 610:	70 93 31 01 	sts	0x0131, r23	; 0x800131 <Time+0x1>
 614:	80 93 32 01 	sts	0x0132, r24	; 0x800132 <Time+0x2>
 618:	90 93 33 01 	sts	0x0133, r25	; 0x800133 <Time+0x3>
	//Channel 1=========================================
	if(PINC & 1<<0)										//Check if input is high
 61c:	30 9b       	sbis	0x06, 0	; 6
 61e:	21 c0       	rjmp	.+66     	; 0x662 <__vector_4+0x80>
	{
		if(last_channel_0 == 0)							//Check if the last channel was low
 620:	00 91 10 01 	lds	r16, 0x0110	; 0x800110 <last_channel_0>
 624:	10 91 11 01 	lds	r17, 0x0111	; 0x800111 <last_channel_0+0x1>
 628:	20 91 12 01 	lds	r18, 0x0112	; 0x800112 <last_channel_0+0x2>
 62c:	30 91 13 01 	lds	r19, 0x0113	; 0x800113 <last_channel_0+0x3>
 630:	01 2b       	or	r16, r17
 632:	02 2b       	or	r16, r18
 634:	03 2b       	or	r16, r19
 636:	a9 f5       	brne	.+106    	; 0x6a2 <__vector_4+0xc0>
		{
			last_channel_0 = 1;							//Remember the current pin state
 638:	01 e0       	ldi	r16, 0x01	; 1
 63a:	10 e0       	ldi	r17, 0x00	; 0
 63c:	20 e0       	ldi	r18, 0x00	; 0
 63e:	30 e0       	ldi	r19, 0x00	; 0
 640:	00 93 10 01 	sts	0x0110, r16	; 0x800110 <last_channel_0>
 644:	10 93 11 01 	sts	0x0111, r17	; 0x800111 <last_channel_0+0x1>
 648:	20 93 12 01 	sts	0x0112, r18	; 0x800112 <last_channel_0+0x2>
 64c:	30 93 13 01 	sts	0x0113, r19	; 0x800113 <last_channel_0+0x3>
			timer_0 = Time;								//Set The first time of the change
 650:	60 93 24 01 	sts	0x0124, r22	; 0x800124 <timer_0>
 654:	70 93 25 01 	sts	0x0125, r23	; 0x800125 <timer_0+0x1>
 658:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <timer_0+0x2>
 65c:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <timer_0+0x3>
 660:	20 c0       	rjmp	.+64     	; 0x6a2 <__vector_4+0xc0>
		}
	}
	else if(last_channel_0 == 1)						//Check if last channel was high
 662:	00 91 10 01 	lds	r16, 0x0110	; 0x800110 <last_channel_0>
 666:	10 91 11 01 	lds	r17, 0x0111	; 0x800111 <last_channel_0+0x1>
 66a:	20 91 12 01 	lds	r18, 0x0112	; 0x800112 <last_channel_0+0x2>
 66e:	30 91 13 01 	lds	r19, 0x0113	; 0x800113 <last_channel_0+0x3>
 672:	01 30       	cpi	r16, 0x01	; 1
 674:	11 05       	cpc	r17, r1
 676:	21 05       	cpc	r18, r1
 678:	31 05       	cpc	r19, r1
 67a:	99 f4       	brne	.+38     	; 0x6a2 <__vector_4+0xc0>
	{
		last_channel_0 = 0;								//Remember the current pin state
 67c:	10 92 10 01 	sts	0x0110, r1	; 0x800110 <last_channel_0>
 680:	10 92 11 01 	sts	0x0111, r1	; 0x800111 <last_channel_0+0x1>
 684:	10 92 12 01 	sts	0x0112, r1	; 0x800112 <last_channel_0+0x2>
 688:	10 92 13 01 	sts	0x0113, r1	; 0x800113 <last_channel_0+0x3>
		receiver_input[0] = Time - timer_0;				//Subtract the first time from the current time
 68c:	20 91 24 01 	lds	r18, 0x0124	; 0x800124 <timer_0>
 690:	30 91 25 01 	lds	r19, 0x0125	; 0x800125 <timer_0+0x1>
 694:	ab 01       	movw	r20, r22
 696:	42 1b       	sub	r20, r18
 698:	53 0b       	sbc	r21, r19
 69a:	50 93 29 01 	sts	0x0129, r21	; 0x800129 <receiver_input+0x1>
 69e:	40 93 28 01 	sts	0x0128, r20	; 0x800128 <receiver_input>
	}
	//Channel 2=========================================
	if(PINC & 1<<1)										//Check if input is high
 6a2:	31 9b       	sbis	0x06, 1	; 6
 6a4:	21 c0       	rjmp	.+66     	; 0x6e8 <__vector_4+0x106>
	{
		if(last_channel_1 == 0)							//Check if the last channel was low
 6a6:	00 91 0c 01 	lds	r16, 0x010C	; 0x80010c <last_channel_1>
 6aa:	10 91 0d 01 	lds	r17, 0x010D	; 0x80010d <last_channel_1+0x1>
 6ae:	20 91 0e 01 	lds	r18, 0x010E	; 0x80010e <last_channel_1+0x2>
 6b2:	30 91 0f 01 	lds	r19, 0x010F	; 0x80010f <last_channel_1+0x3>
 6b6:	01 2b       	or	r16, r17
 6b8:	02 2b       	or	r16, r18
 6ba:	03 2b       	or	r16, r19
 6bc:	a9 f5       	brne	.+106    	; 0x728 <__vector_4+0x146>
		{
			last_channel_1 = 1;							//Remember the current pin state
 6be:	01 e0       	ldi	r16, 0x01	; 1
 6c0:	10 e0       	ldi	r17, 0x00	; 0
 6c2:	20 e0       	ldi	r18, 0x00	; 0
 6c4:	30 e0       	ldi	r19, 0x00	; 0
 6c6:	00 93 0c 01 	sts	0x010C, r16	; 0x80010c <last_channel_1>
 6ca:	10 93 0d 01 	sts	0x010D, r17	; 0x80010d <last_channel_1+0x1>
 6ce:	20 93 0e 01 	sts	0x010E, r18	; 0x80010e <last_channel_1+0x2>
 6d2:	30 93 0f 01 	sts	0x010F, r19	; 0x80010f <last_channel_1+0x3>
			timer_1 = Time;								//Set The first time of the change
 6d6:	60 93 20 01 	sts	0x0120, r22	; 0x800120 <timer_1>
 6da:	70 93 21 01 	sts	0x0121, r23	; 0x800121 <timer_1+0x1>
 6de:	80 93 22 01 	sts	0x0122, r24	; 0x800122 <timer_1+0x2>
 6e2:	90 93 23 01 	sts	0x0123, r25	; 0x800123 <timer_1+0x3>
 6e6:	20 c0       	rjmp	.+64     	; 0x728 <__vector_4+0x146>
		}
	}
	else if(last_channel_1 == 1)						//Check if last channel was high
 6e8:	00 91 0c 01 	lds	r16, 0x010C	; 0x80010c <last_channel_1>
 6ec:	10 91 0d 01 	lds	r17, 0x010D	; 0x80010d <last_channel_1+0x1>
 6f0:	20 91 0e 01 	lds	r18, 0x010E	; 0x80010e <last_channel_1+0x2>
 6f4:	30 91 0f 01 	lds	r19, 0x010F	; 0x80010f <last_channel_1+0x3>
 6f8:	01 30       	cpi	r16, 0x01	; 1
 6fa:	11 05       	cpc	r17, r1
 6fc:	21 05       	cpc	r18, r1
 6fe:	31 05       	cpc	r19, r1
 700:	99 f4       	brne	.+38     	; 0x728 <__vector_4+0x146>
	{
		last_channel_1 = 0;								//Remember the current pin state
 702:	10 92 0c 01 	sts	0x010C, r1	; 0x80010c <last_channel_1>
 706:	10 92 0d 01 	sts	0x010D, r1	; 0x80010d <last_channel_1+0x1>
 70a:	10 92 0e 01 	sts	0x010E, r1	; 0x80010e <last_channel_1+0x2>
 70e:	10 92 0f 01 	sts	0x010F, r1	; 0x80010f <last_channel_1+0x3>
		receiver_input[1] = Time - timer_1;				//Subtract the first time from the current time
 712:	20 91 20 01 	lds	r18, 0x0120	; 0x800120 <timer_1>
 716:	30 91 21 01 	lds	r19, 0x0121	; 0x800121 <timer_1+0x1>
 71a:	ab 01       	movw	r20, r22
 71c:	42 1b       	sub	r20, r18
 71e:	53 0b       	sbc	r21, r19
 720:	50 93 2b 01 	sts	0x012B, r21	; 0x80012b <receiver_input+0x3>
 724:	40 93 2a 01 	sts	0x012A, r20	; 0x80012a <receiver_input+0x2>
	}
	//Channel 3=========================================
	if(PINC & 1<<2)										//Check if input is high
 728:	32 9b       	sbis	0x06, 2	; 6
 72a:	21 c0       	rjmp	.+66     	; 0x76e <__vector_4+0x18c>
	{
		if(last_channel_2 == 0)							//Check if the last channel was low
 72c:	00 91 08 01 	lds	r16, 0x0108	; 0x800108 <last_channel_2>
 730:	10 91 09 01 	lds	r17, 0x0109	; 0x800109 <last_channel_2+0x1>
 734:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <last_channel_2+0x2>
 738:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <last_channel_2+0x3>
 73c:	01 2b       	or	r16, r17
 73e:	02 2b       	or	r16, r18
 740:	03 2b       	or	r16, r19
 742:	a9 f5       	brne	.+106    	; 0x7ae <__vector_4+0x1cc>
		{
			last_channel_2 = 1;							//Remember the current pin state
 744:	01 e0       	ldi	r16, 0x01	; 1
 746:	10 e0       	ldi	r17, 0x00	; 0
 748:	20 e0       	ldi	r18, 0x00	; 0
 74a:	30 e0       	ldi	r19, 0x00	; 0
 74c:	00 93 08 01 	sts	0x0108, r16	; 0x800108 <last_channel_2>
 750:	10 93 09 01 	sts	0x0109, r17	; 0x800109 <last_channel_2+0x1>
 754:	20 93 0a 01 	sts	0x010A, r18	; 0x80010a <last_channel_2+0x2>
 758:	30 93 0b 01 	sts	0x010B, r19	; 0x80010b <last_channel_2+0x3>
			timer_2 = Time;								//Set The first time of the change
 75c:	60 93 1c 01 	sts	0x011C, r22	; 0x80011c <timer_2>
 760:	70 93 1d 01 	sts	0x011D, r23	; 0x80011d <timer_2+0x1>
 764:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timer_2+0x2>
 768:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timer_2+0x3>
 76c:	20 c0       	rjmp	.+64     	; 0x7ae <__vector_4+0x1cc>
		}
	}
	else if(last_channel_2 == 1)						//Check if last channel was high
 76e:	00 91 08 01 	lds	r16, 0x0108	; 0x800108 <last_channel_2>
 772:	10 91 09 01 	lds	r17, 0x0109	; 0x800109 <last_channel_2+0x1>
 776:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <last_channel_2+0x2>
 77a:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <last_channel_2+0x3>
 77e:	01 30       	cpi	r16, 0x01	; 1
 780:	11 05       	cpc	r17, r1
 782:	21 05       	cpc	r18, r1
 784:	31 05       	cpc	r19, r1
 786:	99 f4       	brne	.+38     	; 0x7ae <__vector_4+0x1cc>
	{
		last_channel_2 = 0;								//Remember the current pin state
 788:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <last_channel_2>
 78c:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <last_channel_2+0x1>
 790:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <last_channel_2+0x2>
 794:	10 92 0b 01 	sts	0x010B, r1	; 0x80010b <last_channel_2+0x3>
		receiver_input[2] = Time - timer_2;				//Subtract the first time from the current time
 798:	20 91 1c 01 	lds	r18, 0x011C	; 0x80011c <timer_2>
 79c:	30 91 1d 01 	lds	r19, 0x011D	; 0x80011d <timer_2+0x1>
 7a0:	ab 01       	movw	r20, r22
 7a2:	42 1b       	sub	r20, r18
 7a4:	53 0b       	sbc	r21, r19
 7a6:	50 93 2d 01 	sts	0x012D, r21	; 0x80012d <receiver_input+0x5>
 7aa:	40 93 2c 01 	sts	0x012C, r20	; 0x80012c <receiver_input+0x4>
	}
	//Channel 4=========================================
	if(PINC & 1<<3)										//Check if input is high
 7ae:	33 9b       	sbis	0x06, 3	; 6
 7b0:	21 c0       	rjmp	.+66     	; 0x7f4 <__vector_4+0x212>
	{
		if(last_channel_3 == 0)							//Check if the last channel was low
 7b2:	00 91 04 01 	lds	r16, 0x0104	; 0x800104 <__data_end>
 7b6:	10 91 05 01 	lds	r17, 0x0105	; 0x800105 <__data_end+0x1>
 7ba:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <__data_end+0x2>
 7be:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <__data_end+0x3>
 7c2:	01 2b       	or	r16, r17
 7c4:	02 2b       	or	r16, r18
 7c6:	03 2b       	or	r16, r19
 7c8:	a1 f5       	brne	.+104    	; 0x832 <__vector_4+0x250>
		{
			last_channel_3 = 1;							//Remember the current pin state
 7ca:	01 e0       	ldi	r16, 0x01	; 1
 7cc:	10 e0       	ldi	r17, 0x00	; 0
 7ce:	20 e0       	ldi	r18, 0x00	; 0
 7d0:	30 e0       	ldi	r19, 0x00	; 0
 7d2:	00 93 04 01 	sts	0x0104, r16	; 0x800104 <__data_end>
 7d6:	10 93 05 01 	sts	0x0105, r17	; 0x800105 <__data_end+0x1>
 7da:	20 93 06 01 	sts	0x0106, r18	; 0x800106 <__data_end+0x2>
 7de:	30 93 07 01 	sts	0x0107, r19	; 0x800107 <__data_end+0x3>
			timer_3= Time;								//Set The first time of the change
 7e2:	60 93 18 01 	sts	0x0118, r22	; 0x800118 <timer_3>
 7e6:	70 93 19 01 	sts	0x0119, r23	; 0x800119 <timer_3+0x1>
 7ea:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <timer_3+0x2>
 7ee:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <timer_3+0x3>
 7f2:	1f c0       	rjmp	.+62     	; 0x832 <__vector_4+0x250>
		}
	}
	else if(last_channel_3 == 1)						//Check if last channel was high
 7f4:	00 91 04 01 	lds	r16, 0x0104	; 0x800104 <__data_end>
 7f8:	10 91 05 01 	lds	r17, 0x0105	; 0x800105 <__data_end+0x1>
 7fc:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <__data_end+0x2>
 800:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <__data_end+0x3>
 804:	01 30       	cpi	r16, 0x01	; 1
 806:	11 05       	cpc	r17, r1
 808:	21 05       	cpc	r18, r1
 80a:	31 05       	cpc	r19, r1
 80c:	91 f4       	brne	.+36     	; 0x832 <__vector_4+0x250>
	{
		last_channel_3 = 0;								//Remember the current pin state
 80e:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <__data_end>
 812:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <__data_end+0x1>
 816:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <__data_end+0x2>
 81a:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__data_end+0x3>
		receiver_input[3] = Time - timer_3;				//Subtract the first time from the current time
 81e:	20 91 18 01 	lds	r18, 0x0118	; 0x800118 <timer_3>
 822:	30 91 19 01 	lds	r19, 0x0119	; 0x800119 <timer_3+0x1>
 826:	62 1b       	sub	r22, r18
 828:	73 0b       	sbc	r23, r19
 82a:	70 93 2f 01 	sts	0x012F, r23	; 0x80012f <receiver_input+0x7>
 82e:	60 93 2e 01 	sts	0x012E, r22	; 0x80012e <receiver_input+0x6>
	}
 832:	ff 91       	pop	r31
 834:	ef 91       	pop	r30
 836:	bf 91       	pop	r27
 838:	af 91       	pop	r26
 83a:	9f 91       	pop	r25
 83c:	8f 91       	pop	r24
 83e:	7f 91       	pop	r23
 840:	6f 91       	pop	r22
 842:	5f 91       	pop	r21
 844:	4f 91       	pop	r20
 846:	3f 91       	pop	r19
 848:	2f 91       	pop	r18
 84a:	1f 91       	pop	r17
 84c:	0f 91       	pop	r16
 84e:	0f 90       	pop	r0
 850:	0f be       	out	0x3f, r0	; 63
 852:	0f 90       	pop	r0
 854:	1f 90       	pop	r1
 856:	18 95       	reti

00000858 <__floatunsisf>:
 858:	e8 94       	clt
 85a:	09 c0       	rjmp	.+18     	; 0x86e <__floatsisf+0x12>

0000085c <__floatsisf>:
 85c:	97 fb       	bst	r25, 7
 85e:	3e f4       	brtc	.+14     	; 0x86e <__floatsisf+0x12>
 860:	90 95       	com	r25
 862:	80 95       	com	r24
 864:	70 95       	com	r23
 866:	61 95       	neg	r22
 868:	7f 4f       	sbci	r23, 0xFF	; 255
 86a:	8f 4f       	sbci	r24, 0xFF	; 255
 86c:	9f 4f       	sbci	r25, 0xFF	; 255
 86e:	99 23       	and	r25, r25
 870:	a9 f0       	breq	.+42     	; 0x89c <__floatsisf+0x40>
 872:	f9 2f       	mov	r31, r25
 874:	96 e9       	ldi	r25, 0x96	; 150
 876:	bb 27       	eor	r27, r27
 878:	93 95       	inc	r25
 87a:	f6 95       	lsr	r31
 87c:	87 95       	ror	r24
 87e:	77 95       	ror	r23
 880:	67 95       	ror	r22
 882:	b7 95       	ror	r27
 884:	f1 11       	cpse	r31, r1
 886:	f8 cf       	rjmp	.-16     	; 0x878 <__floatsisf+0x1c>
 888:	fa f4       	brpl	.+62     	; 0x8c8 <__floatsisf+0x6c>
 88a:	bb 0f       	add	r27, r27
 88c:	11 f4       	brne	.+4      	; 0x892 <__floatsisf+0x36>
 88e:	60 ff       	sbrs	r22, 0
 890:	1b c0       	rjmp	.+54     	; 0x8c8 <__floatsisf+0x6c>
 892:	6f 5f       	subi	r22, 0xFF	; 255
 894:	7f 4f       	sbci	r23, 0xFF	; 255
 896:	8f 4f       	sbci	r24, 0xFF	; 255
 898:	9f 4f       	sbci	r25, 0xFF	; 255
 89a:	16 c0       	rjmp	.+44     	; 0x8c8 <__floatsisf+0x6c>
 89c:	88 23       	and	r24, r24
 89e:	11 f0       	breq	.+4      	; 0x8a4 <__floatsisf+0x48>
 8a0:	96 e9       	ldi	r25, 0x96	; 150
 8a2:	11 c0       	rjmp	.+34     	; 0x8c6 <__floatsisf+0x6a>
 8a4:	77 23       	and	r23, r23
 8a6:	21 f0       	breq	.+8      	; 0x8b0 <__floatsisf+0x54>
 8a8:	9e e8       	ldi	r25, 0x8E	; 142
 8aa:	87 2f       	mov	r24, r23
 8ac:	76 2f       	mov	r23, r22
 8ae:	05 c0       	rjmp	.+10     	; 0x8ba <__floatsisf+0x5e>
 8b0:	66 23       	and	r22, r22
 8b2:	71 f0       	breq	.+28     	; 0x8d0 <__floatsisf+0x74>
 8b4:	96 e8       	ldi	r25, 0x86	; 134
 8b6:	86 2f       	mov	r24, r22
 8b8:	70 e0       	ldi	r23, 0x00	; 0
 8ba:	60 e0       	ldi	r22, 0x00	; 0
 8bc:	2a f0       	brmi	.+10     	; 0x8c8 <__floatsisf+0x6c>
 8be:	9a 95       	dec	r25
 8c0:	66 0f       	add	r22, r22
 8c2:	77 1f       	adc	r23, r23
 8c4:	88 1f       	adc	r24, r24
 8c6:	da f7       	brpl	.-10     	; 0x8be <__floatsisf+0x62>
 8c8:	88 0f       	add	r24, r24
 8ca:	96 95       	lsr	r25
 8cc:	87 95       	ror	r24
 8ce:	97 f9       	bld	r25, 7
 8d0:	08 95       	ret

000008d2 <dtostrf>:
 8d2:	ef 92       	push	r14
 8d4:	0f 93       	push	r16
 8d6:	1f 93       	push	r17
 8d8:	cf 93       	push	r28
 8da:	df 93       	push	r29
 8dc:	e8 01       	movw	r28, r16
 8de:	47 fd       	sbrc	r20, 7
 8e0:	02 c0       	rjmp	.+4      	; 0x8e6 <dtostrf+0x14>
 8e2:	34 e0       	ldi	r19, 0x04	; 4
 8e4:	01 c0       	rjmp	.+2      	; 0x8e8 <dtostrf+0x16>
 8e6:	34 e1       	ldi	r19, 0x14	; 20
 8e8:	04 2e       	mov	r0, r20
 8ea:	00 0c       	add	r0, r0
 8ec:	55 0b       	sbc	r21, r21
 8ee:	57 ff       	sbrs	r21, 7
 8f0:	03 c0       	rjmp	.+6      	; 0x8f8 <dtostrf+0x26>
 8f2:	51 95       	neg	r21
 8f4:	41 95       	neg	r20
 8f6:	51 09       	sbc	r21, r1
 8f8:	e3 2e       	mov	r14, r19
 8fa:	02 2f       	mov	r16, r18
 8fc:	24 2f       	mov	r18, r20
 8fe:	ae 01       	movw	r20, r28
 900:	0e 94 89 04 	call	0x912	; 0x912 <dtoa_prf>
 904:	ce 01       	movw	r24, r28
 906:	df 91       	pop	r29
 908:	cf 91       	pop	r28
 90a:	1f 91       	pop	r17
 90c:	0f 91       	pop	r16
 90e:	ef 90       	pop	r14
 910:	08 95       	ret

00000912 <dtoa_prf>:
 912:	a9 e0       	ldi	r26, 0x09	; 9
 914:	b0 e0       	ldi	r27, 0x00	; 0
 916:	ef e8       	ldi	r30, 0x8F	; 143
 918:	f4 e0       	ldi	r31, 0x04	; 4
 91a:	0c 94 c1 06 	jmp	0xd82	; 0xd82 <__prologue_saves__+0xc>
 91e:	6a 01       	movw	r12, r20
 920:	12 2f       	mov	r17, r18
 922:	b0 2e       	mov	r11, r16
 924:	2b e3       	ldi	r18, 0x3B	; 59
 926:	20 17       	cp	r18, r16
 928:	20 f0       	brcs	.+8      	; 0x932 <dtoa_prf+0x20>
 92a:	ff 24       	eor	r15, r15
 92c:	f3 94       	inc	r15
 92e:	f0 0e       	add	r15, r16
 930:	02 c0       	rjmp	.+4      	; 0x936 <dtoa_prf+0x24>
 932:	2c e3       	ldi	r18, 0x3C	; 60
 934:	f2 2e       	mov	r15, r18
 936:	0f 2d       	mov	r16, r15
 938:	27 e0       	ldi	r18, 0x07	; 7
 93a:	ae 01       	movw	r20, r28
 93c:	4f 5f       	subi	r20, 0xFF	; 255
 93e:	5f 4f       	sbci	r21, 0xFF	; 255
 940:	0e 94 e3 05 	call	0xbc6	; 0xbc6 <__ftoa_engine>
 944:	bc 01       	movw	r22, r24
 946:	49 81       	ldd	r20, Y+1	; 0x01
 948:	84 2f       	mov	r24, r20
 94a:	89 70       	andi	r24, 0x09	; 9
 94c:	81 30       	cpi	r24, 0x01	; 1
 94e:	31 f0       	breq	.+12     	; 0x95c <dtoa_prf+0x4a>
 950:	e1 fc       	sbrc	r14, 1
 952:	06 c0       	rjmp	.+12     	; 0x960 <dtoa_prf+0x4e>
 954:	e0 fe       	sbrs	r14, 0
 956:	06 c0       	rjmp	.+12     	; 0x964 <dtoa_prf+0x52>
 958:	90 e2       	ldi	r25, 0x20	; 32
 95a:	05 c0       	rjmp	.+10     	; 0x966 <dtoa_prf+0x54>
 95c:	9d e2       	ldi	r25, 0x2D	; 45
 95e:	03 c0       	rjmp	.+6      	; 0x966 <dtoa_prf+0x54>
 960:	9b e2       	ldi	r25, 0x2B	; 43
 962:	01 c0       	rjmp	.+2      	; 0x966 <dtoa_prf+0x54>
 964:	90 e0       	ldi	r25, 0x00	; 0
 966:	5e 2d       	mov	r21, r14
 968:	50 71       	andi	r21, 0x10	; 16
 96a:	43 ff       	sbrs	r20, 3
 96c:	3c c0       	rjmp	.+120    	; 0x9e6 <dtoa_prf+0xd4>
 96e:	91 11       	cpse	r25, r1
 970:	02 c0       	rjmp	.+4      	; 0x976 <dtoa_prf+0x64>
 972:	83 e0       	ldi	r24, 0x03	; 3
 974:	01 c0       	rjmp	.+2      	; 0x978 <dtoa_prf+0x66>
 976:	84 e0       	ldi	r24, 0x04	; 4
 978:	81 17       	cp	r24, r17
 97a:	18 f4       	brcc	.+6      	; 0x982 <dtoa_prf+0x70>
 97c:	21 2f       	mov	r18, r17
 97e:	28 1b       	sub	r18, r24
 980:	01 c0       	rjmp	.+2      	; 0x984 <dtoa_prf+0x72>
 982:	20 e0       	ldi	r18, 0x00	; 0
 984:	51 11       	cpse	r21, r1
 986:	0b c0       	rjmp	.+22     	; 0x99e <dtoa_prf+0x8c>
 988:	f6 01       	movw	r30, r12
 98a:	82 2f       	mov	r24, r18
 98c:	30 e2       	ldi	r19, 0x20	; 32
 98e:	88 23       	and	r24, r24
 990:	19 f0       	breq	.+6      	; 0x998 <dtoa_prf+0x86>
 992:	31 93       	st	Z+, r19
 994:	81 50       	subi	r24, 0x01	; 1
 996:	fb cf       	rjmp	.-10     	; 0x98e <dtoa_prf+0x7c>
 998:	c2 0e       	add	r12, r18
 99a:	d1 1c       	adc	r13, r1
 99c:	20 e0       	ldi	r18, 0x00	; 0
 99e:	99 23       	and	r25, r25
 9a0:	29 f0       	breq	.+10     	; 0x9ac <dtoa_prf+0x9a>
 9a2:	d6 01       	movw	r26, r12
 9a4:	9c 93       	st	X, r25
 9a6:	f6 01       	movw	r30, r12
 9a8:	31 96       	adiw	r30, 0x01	; 1
 9aa:	6f 01       	movw	r12, r30
 9ac:	c6 01       	movw	r24, r12
 9ae:	03 96       	adiw	r24, 0x03	; 3
 9b0:	e2 fe       	sbrs	r14, 2
 9b2:	0a c0       	rjmp	.+20     	; 0x9c8 <dtoa_prf+0xb6>
 9b4:	3e e4       	ldi	r19, 0x4E	; 78
 9b6:	d6 01       	movw	r26, r12
 9b8:	3c 93       	st	X, r19
 9ba:	41 e4       	ldi	r20, 0x41	; 65
 9bc:	11 96       	adiw	r26, 0x01	; 1
 9be:	4c 93       	st	X, r20
 9c0:	11 97       	sbiw	r26, 0x01	; 1
 9c2:	12 96       	adiw	r26, 0x02	; 2
 9c4:	3c 93       	st	X, r19
 9c6:	06 c0       	rjmp	.+12     	; 0x9d4 <dtoa_prf+0xc2>
 9c8:	3e e6       	ldi	r19, 0x6E	; 110
 9ca:	f6 01       	movw	r30, r12
 9cc:	30 83       	st	Z, r19
 9ce:	41 e6       	ldi	r20, 0x61	; 97
 9d0:	41 83       	std	Z+1, r20	; 0x01
 9d2:	32 83       	std	Z+2, r19	; 0x02
 9d4:	fc 01       	movw	r30, r24
 9d6:	32 2f       	mov	r19, r18
 9d8:	40 e2       	ldi	r20, 0x20	; 32
 9da:	33 23       	and	r19, r19
 9dc:	09 f4       	brne	.+2      	; 0x9e0 <dtoa_prf+0xce>
 9de:	42 c0       	rjmp	.+132    	; 0xa64 <dtoa_prf+0x152>
 9e0:	41 93       	st	Z+, r20
 9e2:	31 50       	subi	r19, 0x01	; 1
 9e4:	fa cf       	rjmp	.-12     	; 0x9da <dtoa_prf+0xc8>
 9e6:	42 ff       	sbrs	r20, 2
 9e8:	44 c0       	rjmp	.+136    	; 0xa72 <dtoa_prf+0x160>
 9ea:	91 11       	cpse	r25, r1
 9ec:	02 c0       	rjmp	.+4      	; 0x9f2 <dtoa_prf+0xe0>
 9ee:	83 e0       	ldi	r24, 0x03	; 3
 9f0:	01 c0       	rjmp	.+2      	; 0x9f4 <dtoa_prf+0xe2>
 9f2:	84 e0       	ldi	r24, 0x04	; 4
 9f4:	81 17       	cp	r24, r17
 9f6:	18 f4       	brcc	.+6      	; 0x9fe <dtoa_prf+0xec>
 9f8:	21 2f       	mov	r18, r17
 9fa:	28 1b       	sub	r18, r24
 9fc:	01 c0       	rjmp	.+2      	; 0xa00 <dtoa_prf+0xee>
 9fe:	20 e0       	ldi	r18, 0x00	; 0
 a00:	51 11       	cpse	r21, r1
 a02:	0b c0       	rjmp	.+22     	; 0xa1a <dtoa_prf+0x108>
 a04:	f6 01       	movw	r30, r12
 a06:	82 2f       	mov	r24, r18
 a08:	30 e2       	ldi	r19, 0x20	; 32
 a0a:	88 23       	and	r24, r24
 a0c:	19 f0       	breq	.+6      	; 0xa14 <dtoa_prf+0x102>
 a0e:	31 93       	st	Z+, r19
 a10:	81 50       	subi	r24, 0x01	; 1
 a12:	fb cf       	rjmp	.-10     	; 0xa0a <dtoa_prf+0xf8>
 a14:	c2 0e       	add	r12, r18
 a16:	d1 1c       	adc	r13, r1
 a18:	20 e0       	ldi	r18, 0x00	; 0
 a1a:	99 23       	and	r25, r25
 a1c:	29 f0       	breq	.+10     	; 0xa28 <dtoa_prf+0x116>
 a1e:	d6 01       	movw	r26, r12
 a20:	9c 93       	st	X, r25
 a22:	f6 01       	movw	r30, r12
 a24:	31 96       	adiw	r30, 0x01	; 1
 a26:	6f 01       	movw	r12, r30
 a28:	c6 01       	movw	r24, r12
 a2a:	03 96       	adiw	r24, 0x03	; 3
 a2c:	e2 fe       	sbrs	r14, 2
 a2e:	0b c0       	rjmp	.+22     	; 0xa46 <dtoa_prf+0x134>
 a30:	39 e4       	ldi	r19, 0x49	; 73
 a32:	d6 01       	movw	r26, r12
 a34:	3c 93       	st	X, r19
 a36:	3e e4       	ldi	r19, 0x4E	; 78
 a38:	11 96       	adiw	r26, 0x01	; 1
 a3a:	3c 93       	st	X, r19
 a3c:	11 97       	sbiw	r26, 0x01	; 1
 a3e:	36 e4       	ldi	r19, 0x46	; 70
 a40:	12 96       	adiw	r26, 0x02	; 2
 a42:	3c 93       	st	X, r19
 a44:	07 c0       	rjmp	.+14     	; 0xa54 <dtoa_prf+0x142>
 a46:	39 e6       	ldi	r19, 0x69	; 105
 a48:	f6 01       	movw	r30, r12
 a4a:	30 83       	st	Z, r19
 a4c:	3e e6       	ldi	r19, 0x6E	; 110
 a4e:	31 83       	std	Z+1, r19	; 0x01
 a50:	36 e6       	ldi	r19, 0x66	; 102
 a52:	32 83       	std	Z+2, r19	; 0x02
 a54:	fc 01       	movw	r30, r24
 a56:	32 2f       	mov	r19, r18
 a58:	40 e2       	ldi	r20, 0x20	; 32
 a5a:	33 23       	and	r19, r19
 a5c:	19 f0       	breq	.+6      	; 0xa64 <dtoa_prf+0x152>
 a5e:	41 93       	st	Z+, r20
 a60:	31 50       	subi	r19, 0x01	; 1
 a62:	fb cf       	rjmp	.-10     	; 0xa5a <dtoa_prf+0x148>
 a64:	fc 01       	movw	r30, r24
 a66:	e2 0f       	add	r30, r18
 a68:	f1 1d       	adc	r31, r1
 a6a:	10 82       	st	Z, r1
 a6c:	8e ef       	ldi	r24, 0xFE	; 254
 a6e:	9f ef       	ldi	r25, 0xFF	; 255
 a70:	a6 c0       	rjmp	.+332    	; 0xbbe <dtoa_prf+0x2ac>
 a72:	21 e0       	ldi	r18, 0x01	; 1
 a74:	30 e0       	ldi	r19, 0x00	; 0
 a76:	91 11       	cpse	r25, r1
 a78:	02 c0       	rjmp	.+4      	; 0xa7e <dtoa_prf+0x16c>
 a7a:	20 e0       	ldi	r18, 0x00	; 0
 a7c:	30 e0       	ldi	r19, 0x00	; 0
 a7e:	16 16       	cp	r1, r22
 a80:	17 06       	cpc	r1, r23
 a82:	1c f4       	brge	.+6      	; 0xa8a <dtoa_prf+0x178>
 a84:	fb 01       	movw	r30, r22
 a86:	31 96       	adiw	r30, 0x01	; 1
 a88:	02 c0       	rjmp	.+4      	; 0xa8e <dtoa_prf+0x17c>
 a8a:	e1 e0       	ldi	r30, 0x01	; 1
 a8c:	f0 e0       	ldi	r31, 0x00	; 0
 a8e:	2e 0f       	add	r18, r30
 a90:	3f 1f       	adc	r19, r31
 a92:	bb 20       	and	r11, r11
 a94:	21 f0       	breq	.+8      	; 0xa9e <dtoa_prf+0x18c>
 a96:	eb 2d       	mov	r30, r11
 a98:	f0 e0       	ldi	r31, 0x00	; 0
 a9a:	31 96       	adiw	r30, 0x01	; 1
 a9c:	02 c0       	rjmp	.+4      	; 0xaa2 <dtoa_prf+0x190>
 a9e:	e0 e0       	ldi	r30, 0x00	; 0
 aa0:	f0 e0       	ldi	r31, 0x00	; 0
 aa2:	2e 0f       	add	r18, r30
 aa4:	3f 1f       	adc	r19, r31
 aa6:	e1 2f       	mov	r30, r17
 aa8:	f0 e0       	ldi	r31, 0x00	; 0
 aaa:	2e 17       	cp	r18, r30
 aac:	3f 07       	cpc	r19, r31
 aae:	1c f4       	brge	.+6      	; 0xab6 <dtoa_prf+0x1a4>
 ab0:	12 1b       	sub	r17, r18
 ab2:	21 2f       	mov	r18, r17
 ab4:	01 c0       	rjmp	.+2      	; 0xab8 <dtoa_prf+0x1a6>
 ab6:	20 e0       	ldi	r18, 0x00	; 0
 ab8:	8e 2d       	mov	r24, r14
 aba:	88 71       	andi	r24, 0x18	; 24
 abc:	59 f4       	brne	.+22     	; 0xad4 <dtoa_prf+0x1c2>
 abe:	f6 01       	movw	r30, r12
 ac0:	82 2f       	mov	r24, r18
 ac2:	30 e2       	ldi	r19, 0x20	; 32
 ac4:	88 23       	and	r24, r24
 ac6:	19 f0       	breq	.+6      	; 0xace <dtoa_prf+0x1bc>
 ac8:	31 93       	st	Z+, r19
 aca:	81 50       	subi	r24, 0x01	; 1
 acc:	fb cf       	rjmp	.-10     	; 0xac4 <dtoa_prf+0x1b2>
 ace:	c2 0e       	add	r12, r18
 ad0:	d1 1c       	adc	r13, r1
 ad2:	20 e0       	ldi	r18, 0x00	; 0
 ad4:	99 23       	and	r25, r25
 ad6:	29 f0       	breq	.+10     	; 0xae2 <dtoa_prf+0x1d0>
 ad8:	d6 01       	movw	r26, r12
 ada:	9c 93       	st	X, r25
 adc:	f6 01       	movw	r30, r12
 ade:	31 96       	adiw	r30, 0x01	; 1
 ae0:	6f 01       	movw	r12, r30
 ae2:	51 11       	cpse	r21, r1
 ae4:	0b c0       	rjmp	.+22     	; 0xafc <dtoa_prf+0x1ea>
 ae6:	f6 01       	movw	r30, r12
 ae8:	82 2f       	mov	r24, r18
 aea:	90 e3       	ldi	r25, 0x30	; 48
 aec:	88 23       	and	r24, r24
 aee:	19 f0       	breq	.+6      	; 0xaf6 <dtoa_prf+0x1e4>
 af0:	91 93       	st	Z+, r25
 af2:	81 50       	subi	r24, 0x01	; 1
 af4:	fb cf       	rjmp	.-10     	; 0xaec <dtoa_prf+0x1da>
 af6:	c2 0e       	add	r12, r18
 af8:	d1 1c       	adc	r13, r1
 afa:	20 e0       	ldi	r18, 0x00	; 0
 afc:	0f 2d       	mov	r16, r15
 afe:	06 0f       	add	r16, r22
 b00:	9a 81       	ldd	r25, Y+2	; 0x02
 b02:	34 2f       	mov	r19, r20
 b04:	30 71       	andi	r19, 0x10	; 16
 b06:	44 ff       	sbrs	r20, 4
 b08:	03 c0       	rjmp	.+6      	; 0xb10 <dtoa_prf+0x1fe>
 b0a:	91 33       	cpi	r25, 0x31	; 49
 b0c:	09 f4       	brne	.+2      	; 0xb10 <dtoa_prf+0x1fe>
 b0e:	01 50       	subi	r16, 0x01	; 1
 b10:	10 16       	cp	r1, r16
 b12:	24 f4       	brge	.+8      	; 0xb1c <dtoa_prf+0x20a>
 b14:	09 30       	cpi	r16, 0x09	; 9
 b16:	18 f0       	brcs	.+6      	; 0xb1e <dtoa_prf+0x20c>
 b18:	08 e0       	ldi	r16, 0x08	; 8
 b1a:	01 c0       	rjmp	.+2      	; 0xb1e <dtoa_prf+0x20c>
 b1c:	01 e0       	ldi	r16, 0x01	; 1
 b1e:	ab 01       	movw	r20, r22
 b20:	77 ff       	sbrs	r23, 7
 b22:	02 c0       	rjmp	.+4      	; 0xb28 <dtoa_prf+0x216>
 b24:	40 e0       	ldi	r20, 0x00	; 0
 b26:	50 e0       	ldi	r21, 0x00	; 0
 b28:	fb 01       	movw	r30, r22
 b2a:	e4 1b       	sub	r30, r20
 b2c:	f5 0b       	sbc	r31, r21
 b2e:	a1 e0       	ldi	r26, 0x01	; 1
 b30:	b0 e0       	ldi	r27, 0x00	; 0
 b32:	ac 0f       	add	r26, r28
 b34:	bd 1f       	adc	r27, r29
 b36:	ea 0f       	add	r30, r26
 b38:	fb 1f       	adc	r31, r27
 b3a:	8e e2       	ldi	r24, 0x2E	; 46
 b3c:	a8 2e       	mov	r10, r24
 b3e:	4b 01       	movw	r8, r22
 b40:	80 1a       	sub	r8, r16
 b42:	91 08       	sbc	r9, r1
 b44:	0b 2d       	mov	r16, r11
 b46:	10 e0       	ldi	r17, 0x00	; 0
 b48:	11 95       	neg	r17
 b4a:	01 95       	neg	r16
 b4c:	11 09       	sbc	r17, r1
 b4e:	4f 3f       	cpi	r20, 0xFF	; 255
 b50:	bf ef       	ldi	r27, 0xFF	; 255
 b52:	5b 07       	cpc	r21, r27
 b54:	21 f4       	brne	.+8      	; 0xb5e <dtoa_prf+0x24c>
 b56:	d6 01       	movw	r26, r12
 b58:	ac 92       	st	X, r10
 b5a:	11 96       	adiw	r26, 0x01	; 1
 b5c:	6d 01       	movw	r12, r26
 b5e:	64 17       	cp	r22, r20
 b60:	75 07       	cpc	r23, r21
 b62:	2c f0       	brlt	.+10     	; 0xb6e <dtoa_prf+0x25c>
 b64:	84 16       	cp	r8, r20
 b66:	95 06       	cpc	r9, r21
 b68:	14 f4       	brge	.+4      	; 0xb6e <dtoa_prf+0x25c>
 b6a:	81 81       	ldd	r24, Z+1	; 0x01
 b6c:	01 c0       	rjmp	.+2      	; 0xb70 <dtoa_prf+0x25e>
 b6e:	80 e3       	ldi	r24, 0x30	; 48
 b70:	41 50       	subi	r20, 0x01	; 1
 b72:	51 09       	sbc	r21, r1
 b74:	31 96       	adiw	r30, 0x01	; 1
 b76:	d6 01       	movw	r26, r12
 b78:	11 96       	adiw	r26, 0x01	; 1
 b7a:	7d 01       	movw	r14, r26
 b7c:	40 17       	cp	r20, r16
 b7e:	51 07       	cpc	r21, r17
 b80:	24 f0       	brlt	.+8      	; 0xb8a <dtoa_prf+0x278>
 b82:	d6 01       	movw	r26, r12
 b84:	8c 93       	st	X, r24
 b86:	67 01       	movw	r12, r14
 b88:	e2 cf       	rjmp	.-60     	; 0xb4e <dtoa_prf+0x23c>
 b8a:	64 17       	cp	r22, r20
 b8c:	75 07       	cpc	r23, r21
 b8e:	39 f4       	brne	.+14     	; 0xb9e <dtoa_prf+0x28c>
 b90:	96 33       	cpi	r25, 0x36	; 54
 b92:	20 f4       	brcc	.+8      	; 0xb9c <dtoa_prf+0x28a>
 b94:	95 33       	cpi	r25, 0x35	; 53
 b96:	19 f4       	brne	.+6      	; 0xb9e <dtoa_prf+0x28c>
 b98:	31 11       	cpse	r19, r1
 b9a:	01 c0       	rjmp	.+2      	; 0xb9e <dtoa_prf+0x28c>
 b9c:	81 e3       	ldi	r24, 0x31	; 49
 b9e:	f6 01       	movw	r30, r12
 ba0:	80 83       	st	Z, r24
 ba2:	f7 01       	movw	r30, r14
 ba4:	82 2f       	mov	r24, r18
 ba6:	90 e2       	ldi	r25, 0x20	; 32
 ba8:	88 23       	and	r24, r24
 baa:	19 f0       	breq	.+6      	; 0xbb2 <dtoa_prf+0x2a0>
 bac:	91 93       	st	Z+, r25
 bae:	81 50       	subi	r24, 0x01	; 1
 bb0:	fb cf       	rjmp	.-10     	; 0xba8 <dtoa_prf+0x296>
 bb2:	f7 01       	movw	r30, r14
 bb4:	e2 0f       	add	r30, r18
 bb6:	f1 1d       	adc	r31, r1
 bb8:	10 82       	st	Z, r1
 bba:	80 e0       	ldi	r24, 0x00	; 0
 bbc:	90 e0       	ldi	r25, 0x00	; 0
 bbe:	29 96       	adiw	r28, 0x09	; 9
 bc0:	ec e0       	ldi	r30, 0x0C	; 12
 bc2:	0c 94 dd 06 	jmp	0xdba	; 0xdba <__epilogue_restores__+0xc>

00000bc6 <__ftoa_engine>:
 bc6:	28 30       	cpi	r18, 0x08	; 8
 bc8:	08 f0       	brcs	.+2      	; 0xbcc <__ftoa_engine+0x6>
 bca:	27 e0       	ldi	r18, 0x07	; 7
 bcc:	33 27       	eor	r19, r19
 bce:	da 01       	movw	r26, r20
 bd0:	99 0f       	add	r25, r25
 bd2:	31 1d       	adc	r19, r1
 bd4:	87 fd       	sbrc	r24, 7
 bd6:	91 60       	ori	r25, 0x01	; 1
 bd8:	00 96       	adiw	r24, 0x00	; 0
 bda:	61 05       	cpc	r22, r1
 bdc:	71 05       	cpc	r23, r1
 bde:	39 f4       	brne	.+14     	; 0xbee <__ftoa_engine+0x28>
 be0:	32 60       	ori	r19, 0x02	; 2
 be2:	2e 5f       	subi	r18, 0xFE	; 254
 be4:	3d 93       	st	X+, r19
 be6:	30 e3       	ldi	r19, 0x30	; 48
 be8:	2a 95       	dec	r18
 bea:	e1 f7       	brne	.-8      	; 0xbe4 <__ftoa_engine+0x1e>
 bec:	08 95       	ret
 bee:	9f 3f       	cpi	r25, 0xFF	; 255
 bf0:	30 f0       	brcs	.+12     	; 0xbfe <__ftoa_engine+0x38>
 bf2:	80 38       	cpi	r24, 0x80	; 128
 bf4:	71 05       	cpc	r23, r1
 bf6:	61 05       	cpc	r22, r1
 bf8:	09 f0       	breq	.+2      	; 0xbfc <__ftoa_engine+0x36>
 bfa:	3c 5f       	subi	r19, 0xFC	; 252
 bfc:	3c 5f       	subi	r19, 0xFC	; 252
 bfe:	3d 93       	st	X+, r19
 c00:	91 30       	cpi	r25, 0x01	; 1
 c02:	08 f0       	brcs	.+2      	; 0xc06 <__ftoa_engine+0x40>
 c04:	80 68       	ori	r24, 0x80	; 128
 c06:	91 1d       	adc	r25, r1
 c08:	df 93       	push	r29
 c0a:	cf 93       	push	r28
 c0c:	1f 93       	push	r17
 c0e:	0f 93       	push	r16
 c10:	ff 92       	push	r15
 c12:	ef 92       	push	r14
 c14:	19 2f       	mov	r17, r25
 c16:	98 7f       	andi	r25, 0xF8	; 248
 c18:	96 95       	lsr	r25
 c1a:	e9 2f       	mov	r30, r25
 c1c:	96 95       	lsr	r25
 c1e:	96 95       	lsr	r25
 c20:	e9 0f       	add	r30, r25
 c22:	ff 27       	eor	r31, r31
 c24:	ee 53       	subi	r30, 0x3E	; 62
 c26:	ff 4f       	sbci	r31, 0xFF	; 255
 c28:	99 27       	eor	r25, r25
 c2a:	33 27       	eor	r19, r19
 c2c:	ee 24       	eor	r14, r14
 c2e:	ff 24       	eor	r15, r15
 c30:	a7 01       	movw	r20, r14
 c32:	e7 01       	movw	r28, r14
 c34:	05 90       	lpm	r0, Z+
 c36:	08 94       	sec
 c38:	07 94       	ror	r0
 c3a:	28 f4       	brcc	.+10     	; 0xc46 <__ftoa_engine+0x80>
 c3c:	36 0f       	add	r19, r22
 c3e:	e7 1e       	adc	r14, r23
 c40:	f8 1e       	adc	r15, r24
 c42:	49 1f       	adc	r20, r25
 c44:	51 1d       	adc	r21, r1
 c46:	66 0f       	add	r22, r22
 c48:	77 1f       	adc	r23, r23
 c4a:	88 1f       	adc	r24, r24
 c4c:	99 1f       	adc	r25, r25
 c4e:	06 94       	lsr	r0
 c50:	a1 f7       	brne	.-24     	; 0xc3a <__ftoa_engine+0x74>
 c52:	05 90       	lpm	r0, Z+
 c54:	07 94       	ror	r0
 c56:	28 f4       	brcc	.+10     	; 0xc62 <__ftoa_engine+0x9c>
 c58:	e7 0e       	add	r14, r23
 c5a:	f8 1e       	adc	r15, r24
 c5c:	49 1f       	adc	r20, r25
 c5e:	56 1f       	adc	r21, r22
 c60:	c1 1d       	adc	r28, r1
 c62:	77 0f       	add	r23, r23
 c64:	88 1f       	adc	r24, r24
 c66:	99 1f       	adc	r25, r25
 c68:	66 1f       	adc	r22, r22
 c6a:	06 94       	lsr	r0
 c6c:	a1 f7       	brne	.-24     	; 0xc56 <__ftoa_engine+0x90>
 c6e:	05 90       	lpm	r0, Z+
 c70:	07 94       	ror	r0
 c72:	28 f4       	brcc	.+10     	; 0xc7e <__ftoa_engine+0xb8>
 c74:	f8 0e       	add	r15, r24
 c76:	49 1f       	adc	r20, r25
 c78:	56 1f       	adc	r21, r22
 c7a:	c7 1f       	adc	r28, r23
 c7c:	d1 1d       	adc	r29, r1
 c7e:	88 0f       	add	r24, r24
 c80:	99 1f       	adc	r25, r25
 c82:	66 1f       	adc	r22, r22
 c84:	77 1f       	adc	r23, r23
 c86:	06 94       	lsr	r0
 c88:	a1 f7       	brne	.-24     	; 0xc72 <__ftoa_engine+0xac>
 c8a:	05 90       	lpm	r0, Z+
 c8c:	07 94       	ror	r0
 c8e:	20 f4       	brcc	.+8      	; 0xc98 <__ftoa_engine+0xd2>
 c90:	49 0f       	add	r20, r25
 c92:	56 1f       	adc	r21, r22
 c94:	c7 1f       	adc	r28, r23
 c96:	d8 1f       	adc	r29, r24
 c98:	99 0f       	add	r25, r25
 c9a:	66 1f       	adc	r22, r22
 c9c:	77 1f       	adc	r23, r23
 c9e:	88 1f       	adc	r24, r24
 ca0:	06 94       	lsr	r0
 ca2:	a9 f7       	brne	.-22     	; 0xc8e <__ftoa_engine+0xc8>
 ca4:	84 91       	lpm	r24, Z
 ca6:	10 95       	com	r17
 ca8:	17 70       	andi	r17, 0x07	; 7
 caa:	41 f0       	breq	.+16     	; 0xcbc <__ftoa_engine+0xf6>
 cac:	d6 95       	lsr	r29
 cae:	c7 95       	ror	r28
 cb0:	57 95       	ror	r21
 cb2:	47 95       	ror	r20
 cb4:	f7 94       	ror	r15
 cb6:	e7 94       	ror	r14
 cb8:	1a 95       	dec	r17
 cba:	c1 f7       	brne	.-16     	; 0xcac <__ftoa_engine+0xe6>
 cbc:	e8 e6       	ldi	r30, 0x68	; 104
 cbe:	f0 e0       	ldi	r31, 0x00	; 0
 cc0:	68 94       	set
 cc2:	15 90       	lpm	r1, Z+
 cc4:	15 91       	lpm	r17, Z+
 cc6:	35 91       	lpm	r19, Z+
 cc8:	65 91       	lpm	r22, Z+
 cca:	95 91       	lpm	r25, Z+
 ccc:	05 90       	lpm	r0, Z+
 cce:	7f e2       	ldi	r23, 0x2F	; 47
 cd0:	73 95       	inc	r23
 cd2:	e1 18       	sub	r14, r1
 cd4:	f1 0a       	sbc	r15, r17
 cd6:	43 0b       	sbc	r20, r19
 cd8:	56 0b       	sbc	r21, r22
 cda:	c9 0b       	sbc	r28, r25
 cdc:	d0 09       	sbc	r29, r0
 cde:	c0 f7       	brcc	.-16     	; 0xcd0 <__ftoa_engine+0x10a>
 ce0:	e1 0c       	add	r14, r1
 ce2:	f1 1e       	adc	r15, r17
 ce4:	43 1f       	adc	r20, r19
 ce6:	56 1f       	adc	r21, r22
 ce8:	c9 1f       	adc	r28, r25
 cea:	d0 1d       	adc	r29, r0
 cec:	7e f4       	brtc	.+30     	; 0xd0c <__ftoa_engine+0x146>
 cee:	70 33       	cpi	r23, 0x30	; 48
 cf0:	11 f4       	brne	.+4      	; 0xcf6 <__ftoa_engine+0x130>
 cf2:	8a 95       	dec	r24
 cf4:	e6 cf       	rjmp	.-52     	; 0xcc2 <__ftoa_engine+0xfc>
 cf6:	e8 94       	clt
 cf8:	01 50       	subi	r16, 0x01	; 1
 cfa:	30 f0       	brcs	.+12     	; 0xd08 <__ftoa_engine+0x142>
 cfc:	08 0f       	add	r16, r24
 cfe:	0a f4       	brpl	.+2      	; 0xd02 <__ftoa_engine+0x13c>
 d00:	00 27       	eor	r16, r16
 d02:	02 17       	cp	r16, r18
 d04:	08 f4       	brcc	.+2      	; 0xd08 <__ftoa_engine+0x142>
 d06:	20 2f       	mov	r18, r16
 d08:	23 95       	inc	r18
 d0a:	02 2f       	mov	r16, r18
 d0c:	7a 33       	cpi	r23, 0x3A	; 58
 d0e:	28 f0       	brcs	.+10     	; 0xd1a <__ftoa_engine+0x154>
 d10:	79 e3       	ldi	r23, 0x39	; 57
 d12:	7d 93       	st	X+, r23
 d14:	2a 95       	dec	r18
 d16:	e9 f7       	brne	.-6      	; 0xd12 <__ftoa_engine+0x14c>
 d18:	10 c0       	rjmp	.+32     	; 0xd3a <__ftoa_engine+0x174>
 d1a:	7d 93       	st	X+, r23
 d1c:	2a 95       	dec	r18
 d1e:	89 f6       	brne	.-94     	; 0xcc2 <__ftoa_engine+0xfc>
 d20:	06 94       	lsr	r0
 d22:	97 95       	ror	r25
 d24:	67 95       	ror	r22
 d26:	37 95       	ror	r19
 d28:	17 95       	ror	r17
 d2a:	17 94       	ror	r1
 d2c:	e1 18       	sub	r14, r1
 d2e:	f1 0a       	sbc	r15, r17
 d30:	43 0b       	sbc	r20, r19
 d32:	56 0b       	sbc	r21, r22
 d34:	c9 0b       	sbc	r28, r25
 d36:	d0 09       	sbc	r29, r0
 d38:	98 f0       	brcs	.+38     	; 0xd60 <__ftoa_engine+0x19a>
 d3a:	23 95       	inc	r18
 d3c:	7e 91       	ld	r23, -X
 d3e:	73 95       	inc	r23
 d40:	7a 33       	cpi	r23, 0x3A	; 58
 d42:	08 f0       	brcs	.+2      	; 0xd46 <__ftoa_engine+0x180>
 d44:	70 e3       	ldi	r23, 0x30	; 48
 d46:	7c 93       	st	X, r23
 d48:	20 13       	cpse	r18, r16
 d4a:	b8 f7       	brcc	.-18     	; 0xd3a <__ftoa_engine+0x174>
 d4c:	7e 91       	ld	r23, -X
 d4e:	70 61       	ori	r23, 0x10	; 16
 d50:	7d 93       	st	X+, r23
 d52:	30 f0       	brcs	.+12     	; 0xd60 <__ftoa_engine+0x19a>
 d54:	83 95       	inc	r24
 d56:	71 e3       	ldi	r23, 0x31	; 49
 d58:	7d 93       	st	X+, r23
 d5a:	70 e3       	ldi	r23, 0x30	; 48
 d5c:	2a 95       	dec	r18
 d5e:	e1 f7       	brne	.-8      	; 0xd58 <__ftoa_engine+0x192>
 d60:	11 24       	eor	r1, r1
 d62:	ef 90       	pop	r14
 d64:	ff 90       	pop	r15
 d66:	0f 91       	pop	r16
 d68:	1f 91       	pop	r17
 d6a:	cf 91       	pop	r28
 d6c:	df 91       	pop	r29
 d6e:	99 27       	eor	r25, r25
 d70:	87 fd       	sbrc	r24, 7
 d72:	90 95       	com	r25
 d74:	08 95       	ret

00000d76 <__prologue_saves__>:
 d76:	2f 92       	push	r2
 d78:	3f 92       	push	r3
 d7a:	4f 92       	push	r4
 d7c:	5f 92       	push	r5
 d7e:	6f 92       	push	r6
 d80:	7f 92       	push	r7
 d82:	8f 92       	push	r8
 d84:	9f 92       	push	r9
 d86:	af 92       	push	r10
 d88:	bf 92       	push	r11
 d8a:	cf 92       	push	r12
 d8c:	df 92       	push	r13
 d8e:	ef 92       	push	r14
 d90:	ff 92       	push	r15
 d92:	0f 93       	push	r16
 d94:	1f 93       	push	r17
 d96:	cf 93       	push	r28
 d98:	df 93       	push	r29
 d9a:	cd b7       	in	r28, 0x3d	; 61
 d9c:	de b7       	in	r29, 0x3e	; 62
 d9e:	ca 1b       	sub	r28, r26
 da0:	db 0b       	sbc	r29, r27
 da2:	0f b6       	in	r0, 0x3f	; 63
 da4:	f8 94       	cli
 da6:	de bf       	out	0x3e, r29	; 62
 da8:	0f be       	out	0x3f, r0	; 63
 daa:	cd bf       	out	0x3d, r28	; 61
 dac:	09 94       	ijmp

00000dae <__epilogue_restores__>:
 dae:	2a 88       	ldd	r2, Y+18	; 0x12
 db0:	39 88       	ldd	r3, Y+17	; 0x11
 db2:	48 88       	ldd	r4, Y+16	; 0x10
 db4:	5f 84       	ldd	r5, Y+15	; 0x0f
 db6:	6e 84       	ldd	r6, Y+14	; 0x0e
 db8:	7d 84       	ldd	r7, Y+13	; 0x0d
 dba:	8c 84       	ldd	r8, Y+12	; 0x0c
 dbc:	9b 84       	ldd	r9, Y+11	; 0x0b
 dbe:	aa 84       	ldd	r10, Y+10	; 0x0a
 dc0:	b9 84       	ldd	r11, Y+9	; 0x09
 dc2:	c8 84       	ldd	r12, Y+8	; 0x08
 dc4:	df 80       	ldd	r13, Y+7	; 0x07
 dc6:	ee 80       	ldd	r14, Y+6	; 0x06
 dc8:	fd 80       	ldd	r15, Y+5	; 0x05
 dca:	0c 81       	ldd	r16, Y+4	; 0x04
 dcc:	1b 81       	ldd	r17, Y+3	; 0x03
 dce:	aa 81       	ldd	r26, Y+2	; 0x02
 dd0:	b9 81       	ldd	r27, Y+1	; 0x01
 dd2:	ce 0f       	add	r28, r30
 dd4:	d1 1d       	adc	r29, r1
 dd6:	0f b6       	in	r0, 0x3f	; 63
 dd8:	f8 94       	cli
 dda:	de bf       	out	0x3e, r29	; 62
 ddc:	0f be       	out	0x3f, r0	; 63
 dde:	cd bf       	out	0x3d, r28	; 61
 de0:	ed 01       	movw	r28, r26
 de2:	08 95       	ret

00000de4 <_exit>:
 de4:	f8 94       	cli

00000de6 <__stop_program>:
 de6:	ff cf       	rjmp	.-2      	; 0xde6 <__stop_program>
